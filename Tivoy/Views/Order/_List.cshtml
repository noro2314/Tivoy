@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model X.PagedList.IPagedList<DataModels.OrderViewModel>
<table class="table">
    <thead>
        <tr>
            <th>Order Id</th>
            <th>Customer</th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Order Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]">
                    Order Status
                </a>
            </th>
            <th>
                Tour
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr style="line-height:40px">
                <td onclick="location.href='@Url.Action("Order","Order",new { Id=item.Id})'" class="forHover">
                    <p>#@item.Id.ToString("000000")</p>
                </td>
                <td>
                    @item.CustomerName
                </td>
                <td>@item.CreatedDate</td>
                <td>
                    @if (item.StatusId == (int)DataModels.Enums.OrderStatusesEnum.Active)
                    {
                        <button class="btn btn-warning btnSize">
                            Active
                        </button>
                    }
                    else if (item.StatusId == (int)DataModels.Enums.OrderStatusesEnum.Completed)
                    {
                        <button class="btn btn-danger btnSize">
                            Completed
                        </button>
                    }
                </td>
                <td>
                    @if (item.TourId.HasValue)
                    {
                        <span>
                            @item.TourName
                        </span>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>
<div class="col-md-12 text-center">
    @Html.PagedListPager(
         Model,
         page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize }),
         X.PagedList.Mvc.Common.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new X.PagedList.Mvc.Common.PagedListRenderOptions { MaximumPageNumbersToDisplay = 5 },
         new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "divList" }))
</div>
